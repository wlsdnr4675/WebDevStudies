plugins {
	id 'org.springframework.boot' version '2.4.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.4.4'
	// implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.4.4'
	// implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
	implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.23'

	compile group: 'org.springframework.boot', name: 'spring-boot-starter-web-services', version: '2.2.5.RELEASE'
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
	compile group: 'com.querydsl', name: 'querydsl-jpa', version: '4.3.0'
	compile group: 'com.querydsl', name: 'querydsl-apt', version: '4.3.0'
	compile group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.11.744'
	compile group: 'com.google.code.gson', name: 'gson', version: '2.7'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: '2.4.2'



	compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.18'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'

test {
	useJUnitPlatform()
}
def querydslSrcDir = 'src/main/generated'


querydsl{
	library = 'com.querydsl:querydsl-apt'
	jpa = true
	querydslSourcesDir = querydslSrcDir
}



compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}
configurations {
	querydsl.extendsFrom compileClasspath
}
sourceSets{
	main{
		java{
			srcDirs = ['src/main/java', querydslSrcDir]
		}
	}
}